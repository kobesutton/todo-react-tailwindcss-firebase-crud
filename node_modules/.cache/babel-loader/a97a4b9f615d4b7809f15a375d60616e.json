{"ast":null,"code":"var _jsxFileName = \"/Users/kobesutton/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\n//import { Router, Routes } from 'react-router-dom'\nimport NavTodos from './components/NavTodos';\nimport TodoForm from './components/TodoForm';\nimport { useState } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState({\n    text: 'Todos',\n    isCompleted: false\n  });\n\n  const addTodo = text => {\n    const newAddedTodo = [...todos, {\n      text\n    }];\n    setTodos(newAddedTodo);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const editTodo = index => {\n    const editedTodo = todos.filter(todo => todo.id === index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavTodos, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TodoItem, {\n        index: index,\n        addTodo: todo,\n        removeTodo: removeTodo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"UGRs0ER+PeApuUM/3C8sc3I1Mko=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kobesutton/todo-app/src/App.js"],"names":["NavTodos","TodoForm","useState","TodoItem","App","todos","setTodos","text","isCompleted","addTodo","newAddedTodo","removeTodo","index","newTodos","splice","editTodo","editedTodo","filter","todo","id","map"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AACjCK,IAAAA,IAAI,EAAE,OAD2B;AAEjCC,IAAAA,WAAW,EAAE;AAFoB,GAAD,CAAlC;;AAKA,QAAMC,OAAO,GAAIF,IAAD,IAAU;AAC1B,UAAMG,YAAY,GAAG,CAAC,GAAGL,KAAJ,EAAW;AAAEE,MAAAA;AAAF,KAAX,CAArB;AACAD,IAAAA,QAAQ,CAACI,YAAD,CAAR;AACD,GAHC;;AAKA,QAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,UAAMC,QAAQ,GAAG,CAAC,GAAGR,KAAJ,CAAjB;AACAQ,IAAAA,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,EAAuB,CAAvB;AACAN,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACD,GAJD;;AAMA,QAAME,QAAQ,GAAGH,KAAK,IAAI;AAExB,UAAMI,UAAU,GAAGX,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,KAAjC,CAAnB;AAED,GAJD;;AAMA,sBACE;AAAA,4BACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFA,eAIA;AAAA,gBACGJ,KAAK,CAACe,GAAN,CAAU,CAACF,IAAD,EAAON,KAAP,kBACT,QAAC,QAAD;AACA,QAAA,KAAK,EAAEA,KADP;AAEA,QAAA,OAAO,EAAEM,IAFT;AAGA,QAAA,UAAU,EAAEP;AAHZ,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADF;AAeD;;GAvCQR,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["//import { Router, Routes } from 'react-router-dom'\nimport NavTodos from './components/NavTodos';\nimport TodoForm from './components/TodoForm';\nimport { useState } from 'react';\nimport TodoItem from './components/TodoItem';\n\nfunction App() {\n\n  const [todos, setTodos] = useState({\n    text: 'Todos',\n    isCompleted: false,\n  })\n\n  const addTodo = (text) => {\n  const newAddedTodo = [...todos, { text }]\n  setTodos(newAddedTodo)\n}\n\n  const removeTodo = index => {\n    const newTodos = [...todos]\n    newTodos.splice(index, 1)\n    setTodos(newTodos)\n  }\n\n  const editTodo = index => {\n\n    const editedTodo = todos.filter(todo => todo.id === index)\n\n  }\n\n  return (\n    <>\n    <NavTodos/>\n    <TodoForm addTodo={addTodo}/>\n    \n    <div>\n      {todos.map((todo, index) => (\n        <TodoItem key={index} \n        index={index} \n        addTodo={todo} \n        removeTodo={removeTodo}/>\n      ))}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}