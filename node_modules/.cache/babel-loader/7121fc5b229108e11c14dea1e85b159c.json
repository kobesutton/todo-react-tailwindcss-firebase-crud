{"ast":null,"code":"var _jsxFileName = \"/Users/kobesutton/todo-app/src/components/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    todo,\n    index,\n    removeTodo,\n    editTodo\n  } = _ref;\n  const [newTodo, setNewTodo] = useState(todo.title);\n\n  const handleChange = e => {\n    if (todo.completed === true) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      value: todo.title === '' ? newTodo : todo.title,\n      type: \"text\",\n      className: todo.completed ? 'line-through' : '',\n      onChange: handleTodoChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoItem, \"/qArQgQHwqOggCy3p3qrAfQWVOM=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/kobesutton/todo-app/src/components/TodoItem.js"],"names":["useState","TodoItem","todo","index","removeTodo","editTodo","newTodo","setNewTodo","title","handleChange","e","completed","handleTodoChange"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,QAAQ,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,GAA0C;AAExD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAACE,IAAI,CAACM,KAAN,CAAtC;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAGR,IAAI,CAACS,SAAL,KAAmB,IAAtB,EAA4B,CAE3B;AACJ,GAJD;;AAMA,sBACI;AAAA,2BACG;AACA,MAAA,KAAK,EAAGT,IAAI,CAACM,KAAL,KAAe,EAAf,GAAoBF,OAApB,GAA8BJ,IAAI,CAACM,KAD3C;AAEA,MAAA,IAAI,EAAC,MAFL;AAGA,MAAA,SAAS,EAAGN,IAAI,CAACS,SAAL,GAAiB,cAAjB,GAAkC,EAH9C;AAIA,MAAA,QAAQ,EAAEC;AAJV;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApBD;;GAAMX,Q;;KAAAA,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\n\nconst TodoItem = ({ todo, index, removeTodo, editTodo }) => {\n\n    const [newTodo, setNewTodo] = useState(todo.title)\n\n    const handleChange = e => {\n        if(todo.completed === true) {\n            \n        }\n    }\n\n    return (\n        <div>\n           <input \n           value={ todo.title === '' ? newTodo : todo.title }\n           type=\"text\" \n           className={ todo.completed ? 'line-through' : ''} \n           onChange={handleTodoChange}\n           />\n        </div>\n    )\n}\n\nexport default TodoItem\n"]},"metadata":{},"sourceType":"module"}