{"ast":null,"code":"var _jsxFileName = \"/Users/kobesutton/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\n//import { Router, Routes } from 'react-router-dom'\nimport NavTodos from './components/NavTodos';\nimport TodoForm from './components/TodoForm';\nimport { useState, useEffect } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { collection, query, onSnapshot, updateDoc, doc, deleteDoc } from 'firebase/firestore';\nimport { db } from './firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [newTodo, setNewTodo] = useState([]); //fetch the data from firebase\n\n  useEffect(() => {\n    //query\n    const qy = query(collection(db, 'todos')); //listens to document and creates shot w/ current contents. each time it changes the shot updates \n\n    const shot = onSnapshot(qy, querySnapshot => {\n      let todoArr = [];\n      querySnapshot.forEach(doc => {\n        todoArr.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setNewTodo(todoArr);\n    });\n    return () => shot();\n  }, []);\n\n  const removeTodo = async id => {\n    await deleteDoc(doc(db, 'todos', id));\n  };\n\n  const toggle = async todo => {\n    await updateDoc(doc(db, 'todos', todo.id), {\n      completed: !todo.completed\n    });\n  };\n\n  const editTodo = async (todo, title) => {\n    await updateDoc(doc(db, 'todos', todo.id), {\n      title: title\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavTodos, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center pt-6\",\n      children: newTodo.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        removeTodo: removeTodo,\n        editTodo: editTodo,\n        toggle: toggle\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"lOsTIsnUaKbulRPAmuu2tVN8XNU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kobesutton/todo-app/src/App.js"],"names":["NavTodos","TodoForm","useState","useEffect","TodoItem","collection","query","onSnapshot","updateDoc","doc","deleteDoc","db","App","newTodo","setNewTodo","qy","shot","querySnapshot","todoArr","forEach","push","data","id","removeTodo","toggle","todo","completed","editTodo","title","map"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,GAAnD,EAAwDC,SAAxD,QAAyE,oBAAzE;AACA,SAASC,EAAT,QAAmB,YAAnB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC,CAFa,CAIb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMY,EAAE,GAAGT,KAAK,CAACD,UAAU,CAACM,EAAD,EAAK,OAAL,CAAX,CAAhB,CAFc,CAGd;;AACA,UAAMK,IAAI,GAAGT,UAAU,CAACQ,EAAD,EAAME,aAAD,IAAmB;AAC7C,UAAIC,OAAO,GAAG,EAAd;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAuBV,GAAD,IAAS;AAC7BS,QAAAA,OAAO,CAACE,IAAR,CAAa,EAAC,GAAGX,GAAG,CAACY,IAAJ,EAAJ;AAAgBC,UAAAA,EAAE,EAAEb,GAAG,CAACa;AAAxB,SAAb;AACD,OAFD;AAGAR,MAAAA,UAAU,CAACI,OAAD,CAAV;AACD,KANsB,CAAvB;AAOA,WAAO,MAAMF,IAAI,EAAjB;AACD,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMO,UAAU,GAAG,MAAOD,EAAP,IAAc;AAC/B,UAAMZ,SAAS,CAACD,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcW,EAAd,CAAJ,CAAf;AACD,GAFD;;AAIA,QAAME,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC7B,UAAMjB,SAAS,CAACC,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcc,IAAI,CAACH,EAAnB,CAAJ,EAA4B;AACzCI,MAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AADwB,KAA5B,CAAf;AAGD,GAJD;;AAMA,QAAMC,QAAQ,GAAG,OAAOF,IAAP,EAAaG,KAAb,KAAwB;AACvC,UAAMpB,SAAS,CAACC,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcc,IAAI,CAACH,EAAnB,CAAJ,EAA4B;AAAGM,MAAAA,KAAK,EAAEA;AAAV,KAA5B,CAAf;AACD,GAFD;;AAIA,sBACE;AAAA,4BACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA,gBACGf,OAAO,CAACgB,GAAR,CAAaJ,IAAD,iBACX,QAAC,QAAD;AAEA,QAAA,UAAU,EAAEF,UAFZ;AAGA,QAAA,QAAQ,EAAEI,QAHV;AAIA,QAAA,MAAM,EAAEH;AAJR,SACKC,IAAI,CAACH,EADV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAgBD;;GAjDQV,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["//import { Router, Routes } from 'react-router-dom'\nimport NavTodos from './components/NavTodos';\nimport TodoForm from './components/TodoForm';\nimport { useState, useEffect } from 'react';\nimport TodoItem from './components/TodoItem';\nimport { collection, query, onSnapshot, updateDoc, doc, deleteDoc } from 'firebase/firestore'\nimport { db } from './firebase'\n\nfunction App() {\n\n  const [newTodo, setNewTodo] = useState([])\n\n  //fetch the data from firebase\n  useEffect(() => {\n    //query\n    const qy = query(collection(db, 'todos'))\n    //listens to document and creates shot w/ current contents. each time it changes the shot updates \n    const shot = onSnapshot(qy, (querySnapshot) => {\n      let todoArr = []\n      querySnapshot.forEach((doc) => {\n        todoArr.push({...doc.data(), id: doc.id})\n      })\n      setNewTodo(todoArr)\n    })\n    return () => shot()\n  }, [])\n\n  const removeTodo = async (id) => {\n    await deleteDoc(doc(db, 'todos', id))\n  }\n\n  const toggle = async (todo) => {\n    await updateDoc(doc(db, 'todos', todo.id), {\n      completed: !todo.completed\n    })\n  }\n\n  const editTodo = async (todo, title ) => {\n    await updateDoc(doc(db, 'todos', todo.id), {  title: title })\n  }\n\n  return (\n    <>\n    <NavTodos/>\n    <TodoForm/>\n    <div className='flex justify-center items-center pt-6'>\n      {newTodo.map((todo) => (\n        <TodoItem \n        key={todo.id} \n        removeTodo={removeTodo}\n        editTodo={editTodo}\n        toggle={toggle}\n        />\n      ))}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}